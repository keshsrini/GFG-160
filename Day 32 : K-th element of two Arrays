class Solution {
public:
    int kthElement(vector<int>& a, vector<int>& b, int k) {
        int n1 = a.size();
        int n2 = b.size();
        if (n1 > n2) {
            return kthElement(b, a, k);
        }
        int low = max(0, k-n2);  
        int high = min(k, n1);   
        while (low <= high) {
            int c1 = (low + high) >> 1; 
            int c2 = k - c1;           
            
            int l1 = c1 == 0 ? INT_MIN : a[c1 - 1];
            int l2 = c2 == 0 ? INT_MIN : b[c2 - 1];
            int r1 = c1 == n1 ? INT_MAX : a[c1];
            int r2 = c2 == n2 ? INT_MAX : b[c2];
            if (l1 <= r2 && l2 <= r1) {
                return max(l1, l2);
            }
            else if (l1 > r2) {
                high = c1 - 1; 
            }
            else {
                low = c1 + 1;  
                
            }
        }
        return -1;  
    }
};
