class Solution {
public:
    bool isValidAllocation(vector<int>& arr, int k, int maxPages) {
        int students = 1;
        int currentPages = 0;
        for(int pages : arr) {
            if(pages > maxPages) return false;
            if(currentPages + pages > maxPages) {
                students++;
                currentPages = pages;
                if(students > k) return false;
            }else {
                currentPages += pages;
            }
        }return true;
    }
    int findPages(vector<int>& arr, int k) {
        int n = arr.size();
        if(n < k) return -1;
        int start = *max_element(arr.begin(), arr.end());
        int end = accumulate(arr.begin(), arr.end(), 0);
        int result = -1;
        while(start <= end) {
            int mid = start + (end - start) / 2;
            
            if(isValidAllocation(arr, k, mid)) {
                result = mid;
                end = mid - 1; 
            }else {
                start = mid + 1;
            }
        }return result;
    }
};
