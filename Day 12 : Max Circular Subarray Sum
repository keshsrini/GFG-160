class Solution {
public:
    int kad(vector<int> &arr) {
        int curr = arr[0];
        int maxsum = arr[0];
        for(int i = 1; i < arr.size(); i++) {
            curr = max(arr[i], curr + arr[i]);
            maxsum = max(maxsum, curr);
        }
        return maxsum;
    }
    int circularSubarraySum(vector<int> &arr) {
        int n = arr.size();
        int maxkad = kad(arr);
        if(maxkad < 0) 
            return maxkad;
        int arrsum = 0;
        for(int i = 0; i < n; i++) {
            arrsum += arr[i];
            arr[i] = -arr[i];  
        }
        int w = arrsum + kad(arr);
        for(int i = 0; i < n; i++) {
            arr[i] = -arr[i];
        }
        return max(maxkad, w);
    }
};
